#!/usr/bin/env bash

# Increment, decrement, or mute the volume and send a notification
# of the current volume level.

_check () {
    command -v "$1" > /dev/null
}

if ! _check pamixer; then
    echo "Error: pamixer is not installed. Please install it with: yay -S pamixer" >&2
    exit 1
fi

up_icon="notification-audio-volume-high"
down_icon="notification-audio-volume-medium"
muted_icon="notification-audio-volume-muted"


# Volume pipe for xmobar
_volume_pipe="/tmp/.volume-pipe"

# Create FIFO if it doesn't exist
if [[ ! -p "$_volume_pipe" ]]; then
    mkfifo "$_volume_pipe" 2>/dev/null || {
        echo "Error: Failed to create FIFO at $_volume_pipe" >&2
        exit 1
    }
fi

# get_volume() {
#     pamixer --get-volume-human | tee $_volume_pipe
# }

get_volume() {
    local volume
    volume=$(pamixer --get-volume-human)
    echo "$volume" > "$_volume_pipe"
}

send_notification() {
	volume=$(pamixer --get-volume)
	dunstify -a "ignore" -u low -r 9993 -h int:value:"$volume" -i "$icon" "Volume: ${volume}%" -t 2000
}

case $1 in
up)
	# Set the volume on (if it was muted)
  icon="$up_icon"
	pamixer -u
	pamixer -i 5 --allow-boost
	send_notification "$1"
	;;
down)
  icon="$down_icon"
	pamixer -u
	pamixer -d 5 --allow-boost
	send_notification "$1"
	;;
mute)
	pamixer -t
	if eval "$(pamixer --get-mute)"; then
		dunstify -a "ignore" -t 2000 -r 9993 -u low -i notification-audio-volume-muted "Muted"
	else
    icon="$up_icon"
		send_notification up
	fi
	;;
esac

# get_volume
