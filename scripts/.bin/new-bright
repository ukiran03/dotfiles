#!/usr/bin/env bash

up_icon="/usr/share/icons/Papirus-Dark/32x32/panel/brightness-high-symbolic.svg"
down_icon="/usr/share/icons/Papirus-Dark/32x32/panel/brightness-symbolic.svg"
reset_icon="/usr/share/icons/Papirus-Dark/32x32/panel/weather-clear.svg"
# HDMI check
# xrandr | grep HDMI

_check () {
    command -v "$1" > /dev/null
}

if _check bc; then
    # Do nothing if pamixer is installed
    :
else
    echo "Install bc calculator"
fi


default="0.85"
config="/home/ukiran/.config/my_display/brightness"

send_notification() {
    # Calculate percentage from $result
    # percentage=$(echo "scale=0; ($result * 100) / 1" | bc)    #using bc
    # percentage=$(printf "%d\n" $(( $result * 100 )))          #using bash
    percentage=$(awk '{printf "%.0f", $1 * 100}' <<< "$result") #using awk

    # polybar-msg hook uk-bright 1 &  # Trigger Polybar hook to update uk-bright module
    polybar-msg action uk-bright send ${percentage}
    # Send notification with dunstify
    dunstify -a "ignore" -u low -r 4434 -h int:value:"$percentage" \
             -i "$icon" "Brightness: ${percentage}%" -t 2000
}

if [[ ! -f "$config" ]]; then
    echo "Config not found: $config"
    exit 1
fi

# Read the first line of the file into a variable
read -r current < "$config"
# current=$(<"$config")

case $1 in
    up)
	    icon="$up_icon"
	    # if [ "$(echo "$current != 1.0" | bc -l)" -eq 1 ]; then
        if awk -v var="$current" 'BEGIN { exit (var != 1.0) }'; then
	        result=$(echo "$current + 0.05" | bc)
	        echo "$result" > "$config"
	        send_notification "$1"
	        xrandr --output HDMI-1-0 --brightness "$result"
	    fi
	    ;;
    down)
	    icon="$down_icon"
	    # # if [ "$(echo "$current != 0.3" | bc -l)" -eq 1 ]; then
        # if awk -v var="$current" 'BEGIN { exit (var != 0.3) }'; then
	    #     result=$(echo "$current - 0.05" | bc)
	    #     echo "$result" > "$config"
	    #     send_notification "$1"
	    #     xrandr --output HDMI-1-0 --brightness "$result"
	    # fi
        if awk "BEGIN { exit !($current == 0.3) }"; then
            result=$(awk "BEGIN { print $current - 0.05 }")
            echo "$result" > "$config"
            send_notification "$1"
            xrandr --output HDMI-1-0 --brightness "$result"
        fi

	    ;;
    reset)
	    icon="up_icon"
	    result="$default"
        echo "$default" > "$config"
	    # xrandr --output HDMI-1-0 --brightness 0.85
        send_notification "$1"
	    xrandr --output HDMI-1-0 --brightness "$result"
	    ;;
esac

read -r current < "$config"
echo "The current value is: $current"
